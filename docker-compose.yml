
x-node-common: &node-common
  image: progettosdcc-node        # tutti riusano questa immagine
  stop_signal: SIGTERM
  stop_grace_period: 2s
  depends_on: [registry]
  env_file: [.env]              # usa solo se il tuo config legge da ENV

services:
  registry:
    build:
      context: ./registry
      dockerfile: Dockerfile
    container_name: registry
    ports: ["9000:9000"]

  # Costruisce UNA VOLTA l’immagine condivisa (tag: progettosdcc-node)
  node1:
    <<: *node-common
    build: .
    container_name: node1
    command: ["--id=node1:9001","--port=9001","--registry=registry:9000","--services=","--svc-ctrl=/tmp/services.ctrl"]
    # ports: ["9001:9001/udp"]
    # volumes: ["./svcc/node1:/tmp/services.ctrl"]

  node2:
    <<: *node-common
    container_name: node2
    depends_on: [registry, node1]  # immagine pronta + registry avviato
    command: ["--id=node2:9002","--port=9002","--registry=registry:9000","--services=sub","--svc-ctrl=/tmp/services.ctrl"]
    # ports: ["9002:9002/udp"]
    # volumes: ["./svcc/node2:/tmp/services.ctrl"]

  node3:
    <<: *node-common
    container_name: node3
    depends_on: [registry, node1]
    command: ["--id=node3:9003","--port=9003","--registry=registry:9000","--services=div","--svc-ctrl=/tmp/services.ctrl"]
    # ports: ["9003:9003/udp"]
    # volumes: ["./svcc/node3:/tmp/services.ctrl"]

  node4:
    <<: *node-common
    container_name: node4
    depends_on: [registry, node1]
    command: ["--id=node4:9004","--port=9004","--registry=registry:9000","--services=mul","--svc-ctrl=/tmp/services.ctrl"]
    # ports: ["9004:9004/udp"]
    # volumes: ["./svcc/node4:/tmp/services.ctrl"]

  node5:
    <<: *node-common
    container_name: node5
    depends_on: [registry, node1]
    command: ["--id=node5:9005","--port=9005","--registry=registry:9000","--services=sub","--svc-ctrl=/tmp/services.ctrl"]
    # ports: ["9005:9005/udp"]
    # volumes: ["./svcc/node5:/tmp/services.ctrl"]

  client:
    <<: *node-common
    container_name: client
    # serve solo che node1 abbia buildato l'immagine; registry è facoltativo
    depends_on: [node1, registry]
    entrypoint: ["gossip-node"]
    command: ["--id=client:9009","--port=9009","--registry=registry:9000","--lookup=sub"]
    # ports: ["9009:9009/udp"]
